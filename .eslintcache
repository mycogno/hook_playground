[{"C:\\Users\\Donggeon\\Desktop\\hook_practice\\src\\index.js":"1","C:\\Users\\Donggeon\\Desktop\\hook_practice\\src\\useState.js":"2","C:\\Users\\Donggeon\\Desktop\\hook_practice\\src\\App.js":"3","C:\\Users\\Donggeon\\Desktop\\hook_practice\\src\\useInput.js":"4","C:\\Users\\Donggeon\\Desktop\\hook_practice\\src\\useTabs.js":"5","C:\\Users\\Donggeon\\Desktop\\hook_practice\\src\\useEffect.js":"6"},{"size":168,"mtime":1608304917522,"results":"7","hashOfConfig":"8"},{"size":1391,"mtime":1608307119886,"results":"9","hashOfConfig":"8"},{"size":409,"mtime":1608813124952,"results":"10","hashOfConfig":"8"},{"size":769,"mtime":1608307059750,"results":"11","hashOfConfig":"8"},{"size":1054,"mtime":1608813070283,"results":"12","hashOfConfig":"8"},{"size":512,"mtime":1608813499196,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1cm6has",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Donggeon\\Desktop\\hook_practice\\src\\index.js",[],["28","29"],"C:\\Users\\Donggeon\\Desktop\\hook_practice\\src\\useState.js",["30"],"import React, { useState } from \"react\";\n\nfunction HookUseState({ initNumber }) {\n  const [item, setItem] = useState(initNumber);\n  // useState()는 array를 return해야함\n  // 첫번째 원소는 상태 값 저장 변수, 두번째는 상태 값 갱신 함수\n  const incrementItem = () => setItem(item + 1);\n  const decrementItem = () => setItem(item - 1);\n  return (\n    <div className=\"App\">\n      <h1>Hello useState!</h1>\n      <h2>Start Now! Let's Go!</h2>\n      <h3>count = {item}</h3>\n      <button onClick={incrementItem}>Increment</button>\n      <button onClick={decrementItem}>decrement</button>\n    </div>\n  );\n}\n\nclass UglyUseState extends React.Component {\n  state = {\n    item: 1,\n  };\n  render() {\n    const { item } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Hello Class Component! {item}</h1>\n        <h2>Start Now! Let's Go!</h2>\n        <button onClick={this.incrementItem}>Increment</button>\n        <button onClick={this.decrementItem}>decrement</button>\n      </div>\n    );\n  }\n  // 클래스 컴포넌트는 상태 갱신 함수를 setState로 밖에 못만듦\n  incrementItem = () => {\n    this.setState((state) => {\n      return {\n        item: state.item + 1,\n      };\n    });\n  };\n  decrementItem = () => {\n    this.setState((state) => {\n      return {\n        item: state.item - 1,\n      };\n    });\n  };\n}\n\nexport default HookUseState;\n","C:\\Users\\Donggeon\\Desktop\\hook_practice\\src\\App.js",[],"C:\\Users\\Donggeon\\Desktop\\hook_practice\\src\\useInput.js",[],"C:\\Users\\Donggeon\\Desktop\\hook_practice\\src\\useTabs.js",[],"C:\\Users\\Donggeon\\Desktop\\hook_practice\\src\\useEffect.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":20,"column":7,"nodeType":"37","messageId":"38","endLine":20,"endColumn":19},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'UglyUseState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]